import 'dart:io';import 'package:device_preview/device_preview.dart';import 'package:easy_localization/easy_localization.dart';import 'package:nmeeting/base/api-provider.dart';import 'package:nmeeting/bloc/configBloc.dart';import 'package:nmeeting/models/t-result.dart';import 'package:nmeeting/models/config.dart';import 'package:nmeeting/ui/home/page-home.dart';import 'package:nmeeting/ui/home/version/page-version.dart';import 'package:nmeeting/ui/login/page-login.dart';import 'package:nmeeting/ui/router/app-router.dart';import 'package:nmeeting/utilities/string-utils.dart';import 'package:flutter/material.dart';import 'package:flutter_localizations/flutter_localizations.dart';import 'package:oktoast/oktoast.dart';import 'package:shared_preferences/shared_preferences.dart';import 'package:sizer/sizer.dart';import 'package:webview_flutter/webview_flutter.dart';import 'base/platform-info.dart';bool _loginStatus = false;Future<void> main() async {  WidgetsFlutterBinding.ensureInitialized();  await PlatformInfo.initPlatformState();  HttpOverrides.global = new MyHttpOverrides();  SharedPreferences prefs = await SharedPreferences.getInstance();  _loginStatus = prefs.getBool('isLoggedIn') ?? false;  runApp(DevicePreview(enabled: false, builder: (context) => MyApp()));}class MyApp extends StatelessWidget {  const MyApp({Key? key}) : super(key: key);  // This widget is the root of your application.  @override  Widget build(BuildContext context) {    return Sizer(builder: (context, orientation, deviceType) {      return OKToast(        child: MaterialApp(          supportedLocales: [            Locale('vi', 'VN'),            Locale('en', 'US'),          ],          localizationsDelegates: [            GlobalMaterialLocalizations.delegate,            GlobalWidgetsLocalizations.delegate,            GlobalCupertinoLocalizations.delegate,          ],          theme: ThemeData(fontFamily: 'PlusJakartaSans'),          home: _loginStatus ? PageHome() : PageLogin(),          debugShowCheckedModeBanner: false,          builder: (BuildContext context, Widget? child) {            return MediaQuery(              data: MediaQuery.of(context).copyWith(textScaleFactor: 1.0),              child: child!,            );          },          onGenerateRoute: AppRouter().onGenerateRoute,          navigatorKey: AppRouter.navigatorKey,        ),        animationCurve: Curves.easeIn,        duration: Duration(seconds: 3),        textStyle: TextStyle(fontSize: 18, color: Colors.white),        textPadding: EdgeInsets.all(10),      );    });  }}